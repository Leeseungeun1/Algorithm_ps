/*
  11286-절댓값 힙
  이 문제는 절댓값을 이용하여 최솟 힙을 사용하는 문제다.
  절댓값이기 때문에 절댓값을 취하기 전에 해당 수가 양수였는지, 음수였는지를 표시 해 주기 위해서 boolean 값을 추가로 입력 해 주었다.
  최소 힙을 구현하기 위해서 이미 수에 음수를 취해서 넣었으므로, 만약 절댓값을 취하기 전 수가 음수였다면 그냥 해당 수를 출력하고,
  양수였다면 해당 수에 -를 곱하여 출력 해 준다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>
#include <map>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<char, ll> pci;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	priority_queue<pair<int, bool>> pq;
	int n, num;
	cin >> n;

	bool minus = false;
	while (n--) {
		cin >> num;
		if (num == 0) {
			if (pq.empty()) cout << "0\n";
			else {
				if (pq.top().second) cout << pq.top().first << "\n";
				else cout << -pq.top().first<<"\n";
				pq.pop();
			}
		}
		else {
			if (num < 0) minus = true;
			else minus = false;
			pq.push({ -abs(num), minus });
		}
	}
	return 0;
}
