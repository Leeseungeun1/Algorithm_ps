/*
  17435 - 합성함수와 커리
  1부터 m까지 2^i번 합성하는 결과를 2차원 배열에 저장한다
  그리고 입력되는 n에 따라서, n을 표현하기 위해 사용 된 비트를 살펴보면서
  i번째 비트가 set되어있다면, 2^i번 합성이 된다는 뜻이므로 해당 배열의 결과를 가져온다.
  그리고 이 과정을 반복하면서 n번 합성한 결과를 출력한다.
*/
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>
#include <map>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<char, ll> pci;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int m;
	cin >> m;
	vector<vector<int>> arr(m + 1, vector<int>(19));
	for (int i = 1; i <= m; i++) cin >> arr[i][0];
	
	for (int i = 1; i < 19; i++) {
		for (int j = 1; j <= m; j++) {
			arr[j][i] = arr[arr[j][i - 1]][i - 1];
		}
	}
	int q, n, x;
	cin >> q;
	while (q--) {
		cin >> n >> x;
		for (int i = 18; i >= 0; i--) {
			if (n >= 1 << i) {
				n = n - (1 << i);
				x = arr[x][i];
			}
		}
		cout << x << "\n";
	}

	return 0;
}
