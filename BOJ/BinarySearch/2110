/*
  2110-공유기 설치
  이 문제는 공유기가 설치 된 집 간에 거리를 탐색하는 문제다.
  설치 된 집 간에 거리의 최댓값과 최솟값을 설정한다. 그리고 그 중간값을 잡는다.
  그리고 그 중간값이 공유기간 설치 된 집 사이의 거리라고 한다면, 공유기가 몇 대 설치될 수 있는지 확인한다.
  만약 공유기가 C개 이상으로 설치할 수 있다면, 집 간의 거리가 너무 좁은 것 이므로 중간값을 최솟값으로 설정한다.
  만약 공유기가 C개 미만으로 설치할 수 있다면, 집 간의 거리가 너무 넓은 것 이므로 중간값을 최댓값으로 설정한다.
  이렇게 공유기가 설치 된 집 간의 거리를 탐색 값으로 잡아 이분탐색을 이용하면 해결할 수 있다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>

using namespace std;
typedef long long ll;

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	ll N, C;
	cin >> N >> C;
	vector<ll> home(N);
	for (int i = 0; i < N; i++) {
		cin >> home[i];
	}
	sort(home.begin(), home.end());

	ll start = 0, end = LONG_MAX, ans = 0;
	while (start <= end) {
		ll cnt = 1;
		ll install = home[0];
		ll mid = (start + end) / 2;
		for (int i = 0; i < N; i++) {
			if (home[i] - install >= mid){
				install = home[i];
				cnt++;
			}
		}
		if (cnt < C) end = mid - 1;
		else {
			start = mid + 1;
			ans = max(ans, mid);
		}
	}
	cout << ans;

	return 0;
}
