/*
  1182-부분수열의 합
  각 배열의 원소의 포함 유무를 선택하여, 포함 된 원소의 합이 S의 값과 같은 경우를 찾아내는 방식으로 문제를 해결한다.
  이 때, 주의해야 할 점은 부분수열은 꼭 연속하지 않아도 된다는 점이다.
  그냥 일반적인 재귀식 bruteforce구현 방법을 이용하여 문제를 해결할 수 있다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

void find_sum(vector<int>& arr, vector<bool>& check, int* answer, int limit, int level, int truenum, int S) {
	if (level == limit) {
		if (truenum <= 0) return;
		int sum = 0;
		for (int i = 0; i < limit; i++) {
			if (check[i] == true) sum = sum + arr[i];
		}
		if (S == sum) (*answer)++;
		return;
	}
	else {
		check[level] = true;
		find_sum(arr, check, answer, limit, level + 1, truenum + 1, S);
		check[level] = false;
		find_sum(arr, check, answer, limit, level + 1, truenum, S);
	}
}

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	
	int N, S;
	cin >> N >> S;
	vector<int> arr(N);
	vector<bool> check(N);
	for (int i = 0; i < N; i++) {
		cin >> arr[i];
		check[i] = false;
	}
	int answer = 0;
	find_sum(arr, check, &answer, N, 0, 0, S);

	cout << answer << "\n";
	return 0;
}
