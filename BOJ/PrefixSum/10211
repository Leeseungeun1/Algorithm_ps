/*
  10211-maximum subarray
  subarray의 합을 구하기 위해서는 부분 배열의 시작점을 가리키는 포인터와 끝 점을 가리키는 포인터가 필요하다.
  따라서 두 포인터를 생성하기 위해서 우선 prefix Sum 배열인 arr을 정의한다.
  그리고 이중 for문으로 두 개의 포인터를 설정하면서 arr[j]-arr[i]를 계산하면서 부분 배열의 최대합을 구하면 된다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		vector<int> arr(n + 1);
		arr[0] = 0;
		for (int i = 1; i <= n; i++) {
			cin >> arr[i];
			arr[i] += arr[i - 1];
		}
		
		int maximum = INT_MIN;
		for (int i = 0; i <= n; i++) {
			for (int j = i+1; j <= n; j++) {
				maximum = max(maximum, arr[j] - arr[i]);
			}
		}
		cout << maximum << "\n";
	}
	return 0;
}
