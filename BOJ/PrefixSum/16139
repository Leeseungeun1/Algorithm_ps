/*
  16139- 인간-컴퓨터 상호작용
  이 문제는 16139 문제와 유사한 문제로,
  16139에서는 각 id에 대한 prefix sum을 정의했다면, 이번 문제에서는 각 소문자 알파벳에 대한 prefix sum을 정의하면 된다.
  그리고 정의 한 prefix sum을 이용하여 주어진 구간에서의 알파벳의 수를 구하면 된다.
  이 때, index가 글자의 수-1와 같으므로 인덱싱을 index+1로 처리해야 한다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	string s;
	cin >> s;
	int size = s.size();
	vector<vector<int>> pSum(size + 1, vector<int>(26));
	for (int i = 0; i < 26; i++) pSum[0][i] = 0;

	for (int i = 1; i <= size; i++) {
		for (int j = 0; j < 26; j++) {
			if (j == s[i - 1] - 'a') pSum[i][j] = pSum[i - 1][j] + 1;
			else pSum[i][j] = pSum[i - 1][j];
		}
	}

	int m, a, b;
	char c;
	cin >> m;
	while (m--) {
		cin >> c >> a >> b;
		cout << pSum[b + 1][c - 'a'] - pSum[a][c - 'a'] << "\n";
	}
	cout << "\n";
	return 0;
}
