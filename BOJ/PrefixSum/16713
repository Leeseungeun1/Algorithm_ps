/*
  16713-Generic Queries
  모든 수 a에 대해서 a xor a를 하면 결과가 0으로 나온다.
  그래서 pSum[n]을 처음부터 n개의 원소를 xor한 값을 저장한 값으로 정의를 한다면,
  x부터 y까지의 xor한 값은 pSum[y] ^ pSum[x-1]로 구할 수 있다. (x 미만인 부분은 또 한번 xor 연산이 되므로 0으로 처리가 되기 때문이다.)
  따라서 각 query에 대해서 pSum을 이용하여 연산한 xor결과 끼리 xor 연산을 수행하여 문제를 해결할 수 있다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n, q;
	cin >> n >> q;
	vector<int> arr(n);
	vector<int> xorarr (n + 1);
	for (int i = 0; i < n; i++) cin >> arr[i];
	
	xorarr[0] = 0;
	for (int i = 1; i <= n; i++) xorarr[i] = xorarr[i - 1] ^ arr[i - 1];

	int ans = 0;
	while (q--) {
		int a, b, num;
		cin >> a >> b;
		num = xorarr[b] ^ xorarr[a - 1];
		ans = ans ^ num;
	}
	cout << ans;
	return 0;
}
