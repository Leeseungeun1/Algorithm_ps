/*
  10986-나머지 합
  부분 배열의 합이 m으로 나누어 떨어지는지 여부를 살펴보기 위해서 pSum[n]을 처음부터 n개의 원소의 합을 m으로 나눈 나머지로 정의한다.
  그리고 부분 배열의 합이 m으로 나누어 떨어지기 위해서는 pSum[a]-pSum[b]의 값이 0이 되어야 한다.
  따라서 각 modulo에 대해서 시작 포인터와 마지막 포인터로 나올 수 있는 조합의 수를 계산하면 된다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n, m;
	cin >> n >> m;
	vector<ll> arr(n);
	vector<ll> pSum(n + 1);
	for (int i = 0; i < n; i++) cin >> arr[i];

	pSum[0] = 0;
	for (int i = 1; i <= n; i++) pSum[i] = (pSum[i - 1] + arr[i - 1]) % m;

	vector<ll> mod(m);
	for (int i = 0; i < m; i++) mod[i] = 0;
	for (int i = 0; i <= n; i++) mod[pSum[i]]++;

	ll ans = 0, num = 0;;
	for (int i = 0; i < m; i++) {
		num = mod[i];
		ans = ans + (num * (num - 1)) / 2;	//calculate num combination 2
	}

	cout << ans;
	return 0;
}
