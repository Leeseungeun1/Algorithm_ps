/*
  11969-Breed Counting
  이 문제에서는 배열의 수가 최대로 10만, 구하고자 하는 구간이 10만개가 주어지므로 단순한 이중 for문으로 주어진 시간안에 문제를 해결할 수 없다.
  따라서 전처리 하는 과정을 추가하여 O(max(n, m))시간 안에 문제를 해결해야한다.
  전처리는 각 index까지의 1의 개수, 2의 개수, 3의 개수를 저장하는 pSum을 정의하면 된다.
  그러면 pSum을 이용하여 (a,b)구간의 i의 개수는 pSum[b][i]-pSum[a-1][i]으로 구할 수 있다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <limits.h>
#include <math.h>
#include <queue>
#include <string>
#include <stack>
#include <list>
#include <stdlib.h>
#include <cstring>
#include <deque>
#include <set>

using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef pair<int, pair<int, int>> piii;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int n, m;
	cin >> n >> m;
	vector<int> arr(n);
	vector<vector<int>> pSum(n + 1, vector<int>(4));
	for (int i = 0; i < n; i++) cin >> arr[i];
	
	pSum[0][0] = pSum[0][1] = pSum[0][2] = pSum[0][3] = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= 3; j++) {
			if (j == arr[i - 1]) pSum[i][j] = pSum[i - 1][j] + 1;
			else pSum[i][j] = pSum[i - 1][j];
		}
	}

	while (m--) {
		int a, b;
		cin >> a >> b;
		for (int i = 1; i <= 3; i++) {
			cout << pSum[b][i] - pSum[a - 1][i] << " ";
		}
		cout << "\n";
	}
	return 0;
}
