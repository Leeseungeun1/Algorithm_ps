/*
  13904-과제
  '과제 점수를 최대로 받아야한다'라는 문제 조건에 의해 과제 점수를 욕심내는 기법을 사용하였다.
  n일차까지 n개의 과제를 할 수 있음을 염두하고, n일차가 되었을 때, 우선 과제 점수가 낮은 순으로 과제를 먼저 n개까지추가한뒤,
  남은 과제가 있다면 선정 된 과제의 최솟값과 남은 과제의 점수를 비교하며 최솟값을 높이는 방향으로 문제를 해결하였다.
*/
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

vector<vector<int>> arr(1001);
bool cmp(int a, int b) {
	return a<b;
}
int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);

	int t;
	cin >> t;
	while (t--) {
		int d, w;
		cin >> d >> w;
		arr[d].push_back(w);
	}
	for (int i = 0; i < 1001; i++) {
		if (arr[i].size() == 0) continue;
		sort(arr[i].begin(), arr[i].end());
	}
	
	vector<int> ans;
	for (int i = 0; i < 1001; i++) {
		if (arr[i].size() == 0) continue;
		int index = 0;
		while (ans.size() != i && index < arr[i].size()) {
			ans.push_back(arr[i][index]);
			index++;
		}
		sort(ans.begin(), ans.end(), cmp);
		while (index < arr[i].size()) {
			if (ans[0]< arr[i][index]) {
				ans[0]= arr[i][index];
				sort(ans.begin(), ans.end());
			}
			index++;
		}
	}

	int answer = 0;
	for (int i = 0; i < ans.size(); i++) {
		answer += ans[i];
	}
	cout << answer;
	return 0;
}
